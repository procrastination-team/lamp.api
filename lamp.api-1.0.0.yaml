openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: geekan@bk.ru
  license:
    name: MIT
    url: 'https://opensource.org/licenses/mit-license.php'
  version: 1.0.0
servers:
  - url: /
tags:
  - name: lamp
    description: Intercations with controllers
  - name: mobile
    description: Interactions with mobile app
paths:
  '/lamp-controller/{id}':
    get:
      tags:
        - lamp
      summary: Lamp parameters
      description: Get lamp parameters
      operationId: get-lamp-data
      parameters: []
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  power:
                    type: boolean
                  brightness:
                    type: integer
                    description: Lamp brightness from 0 to 100
                    minimum: 0
                    maximum: 100
                required:
                  - power
              examples:
                example-1:
                  value:
                    power: true
                    brightness: 80
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an inventory item
      description: |-
        Interact with controllers requests. 
        Handle lamp parameters and store this data in DB
      operationId: set-lamp-data
      requestBody:
        description: Set the lamp data from the controller request
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                power:
                  type: boolean
                brightness:
                  type: number
            examples:
              example-1:
                value:
                  id: d290f1ee-6c54-4b01-90e6-d701748f0851
                  name: Corner floor lamp
                  power: true
                  brightness: 80
          application/xml:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Get lamp parameters
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the lamp
  '/lamp-mobile/{id}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Lamp data
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                  group:
                    type: string
                    minLength: 1
                  power:
                    type: boolean
                  brightness:
                    type: number
                    minimum: 0
                    maximum: 100
              examples:
                example-1:
                  value: {}
      operationId: get-lamp-mobile
      description: Get lamp data from the server
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Full data about lamp
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Lamp id
    post:
      summary: ''
      operationId: post-lamp-mobile-id
      responses:
        '200':
          description: OK
      description: Set lamp data to update state of the real lamp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                group:
                  type: string
                power:
                  type: boolean
                brightness:
                  type: integer
                  minimum: 0
                  maximum: 100
        description: Data to set
  /all-lamps:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: All lamps data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    group:
                      type: string
                    power:
                      type: boolean
                    brightness:
                      type: integer
                      minimum: 0
                      maximum: 100
      operationId: get-all-lamps
      description: Get all lamps in the local network
components:
  schemas:
    LampData:
      type: object
      x-examples:
        example-1:
          id: d290f1ee-6c54-4b01-90e6-d701748f0851
          name: Corner floor lamp
          group: Presentation room
          power: true
          brightness: 80
      properties:
        id:
          type: string
        name:
          type: string
        group:
          type: string
        power:
          type: boolean
        brightness:
          type: integer
      required:
        - id
        - name
        - group
        - power
        - brightness
      title: ''
