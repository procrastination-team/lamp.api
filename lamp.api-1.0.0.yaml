openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: geekan@bk.ru
  license:
    name: MIT
    url: 'https://opensource.org/licenses/mit-license.php'
  version: 1.0.0
servers:
  - url: /
tags:
  - name: lamp
    description: Intercations with controllers
  - name: mobile
    description: Interactions with mobile app
paths:
  /lamp:
    get:
      tags:
        - lamp
      summary: change lamp parameters
      description: |
        Interact with controllers requests. 
        Handle them and store data in DB
      operationId: searchInventory
      parameters:
        - name: searchString
          in: query
          description: pass an optional search string for looking up inventory
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: skip
          in: query
          description: number of records to skip for pagination
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of records to return
          required: false
          style: form
          explode: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LampData'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LampData'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
components:
  schemas:
    LampData:
      required:
        - brightness
        - id
        - name
        - power
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Corner floor lamp
        power:
          type: boolean
          example: true
        brightness:
          type: number
          example: 80
